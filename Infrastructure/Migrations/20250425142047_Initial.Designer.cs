// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(PeloterosDbContext))]
    [Migration("20250425142047_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dominio.Entities.Bloqueo", b =>
                {
                    b.Property<Guid>("BloqueoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bloqueo_id");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<TimeOnly>("HoraFin")
                        .HasColumnType("time")
                        .HasColumnName("hora_fin");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time")
                        .HasColumnName("hora_inicio");

                    b.Property<string>("Motivo")
                        .HasColumnType("text")
                        .HasColumnName("motivo");

                    b.Property<Guid>("RecursoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("recurso_id");

                    b.HasKey("BloqueoId")
                        .HasName("PK__Bloqueos__23A6D9CE349ADE33");

                    b.HasIndex("RecursoId");

                    b.HasIndex(new[] { "Fecha" }, "idx_bloqueos_fecha");

                    b.ToTable("Bloqueos");
                });

            modelBuilder.Entity("Dominio.Entities.Cliente", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cliente_id");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateOnly>("FechaRegistro")
                        .HasColumnType("date")
                        .HasColumnName("fecha_registro");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("ClienteId")
                        .HasName("PK__Clientes__47E34D6463C3D9ED");

                    b.HasIndex(new[] { "Email" }, "UQ__Clientes__AB6E616474DE82F3")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Dominio.Entities.HorariosDisponibilidad", b =>
                {
                    b.Property<Guid>("HorarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("horario_id");

                    b.Property<int?>("DiaSemana")
                        .HasColumnType("int")
                        .HasColumnName("dia_semana");

                    b.Property<TimeOnly>("HoraApertura")
                        .HasColumnType("time")
                        .HasColumnName("hora_apertura");

                    b.Property<TimeOnly>("HoraCierre")
                        .HasColumnType("time")
                        .HasColumnName("hora_cierre");

                    b.Property<Guid>("RecursoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("recurso_id");

                    b.HasKey("HorarioId")
                        .HasName("PK__Horarios__5A3872289CFC8D99");

                    b.HasIndex("RecursoId");

                    b.ToTable("HorariosDisponibilidad", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Pago", b =>
                {
                    b.Property<Guid>("PagoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("pago_id");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("estado");

                    b.Property<byte[]>("FechaPago")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("fecha_pago");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("metodo_pago");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto");

                    b.Property<string>("TransaccionId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("transaccion_id");

                    b.Property<Guid>("TurnoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("turno_id");

                    b.HasKey("PagoId")
                        .HasName("PK__Pagos__FFF0A58EA84C92A1");

                    b.HasIndex("TurnoId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Dominio.Entities.Recurso", b =>
                {
                    b.Property<Guid>("RecursoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("recurso_id");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<int?>("Capacidad")
                        .HasColumnType("int")
                        .HasColumnName("capacidad");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("PrecioHora")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_hora");

                    b.HasKey("RecursoId")
                        .HasName("PK__Recursos__054F2526F67C96EA");

                    b.ToTable("Recursos");
                });

            modelBuilder.Entity("Dominio.Entities.Turno", b =>
                {
                    b.Property<Guid>("TurnoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("turno_id");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cliente_id");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<byte[]>("FechaReserva")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("fecha_reserva");

                    b.Property<TimeOnly>("HoraFin")
                        .HasColumnType("time")
                        .HasColumnName("hora_fin");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time")
                        .HasColumnName("hora_inicio");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto_total");

                    b.Property<string>("Notas")
                        .HasColumnType("text")
                        .HasColumnName("notas");

                    b.Property<Guid>("RecursoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("recurso_id");

                    b.HasKey("TurnoId")
                        .HasName("PK__Turnos__8E611ADF24DACE81");

                    b.HasIndex(new[] { "ClienteId" }, "idx_turnos_cliente");

                    b.HasIndex(new[] { "Fecha", "HoraInicio", "HoraFin" }, "idx_turnos_fecha_hora");

                    b.HasIndex(new[] { "RecursoId" }, "idx_turnos_recurso");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Dominio.Entities.Bloqueo", b =>
                {
                    b.HasOne("Dominio.Entities.Recurso", "Recurso")
                        .WithMany("Bloqueos")
                        .HasForeignKey("RecursoId")
                        .IsRequired()
                        .HasConstraintName("FK__Bloqueos__recurs__4AB81AF0");

                    b.Navigation("Recurso");
                });

            modelBuilder.Entity("Dominio.Entities.HorariosDisponibilidad", b =>
                {
                    b.HasOne("Dominio.Entities.Recurso", "Recurso")
                        .WithMany("HorariosDisponibilidads")
                        .HasForeignKey("RecursoId")
                        .IsRequired()
                        .HasConstraintName("FK__HorariosD__recur__47DBAE45");

                    b.Navigation("Recurso");
                });

            modelBuilder.Entity("Dominio.Entities.Pago", b =>
                {
                    b.HasOne("Dominio.Entities.Turno", "Turno")
                        .WithMany("Pagos")
                        .HasForeignKey("TurnoId")
                        .IsRequired()
                        .HasConstraintName("FK__Pagos__turno_id__440B1D61");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("Dominio.Entities.Turno", b =>
                {
                    b.HasOne("Dominio.Entities.Cliente", "Cliente")
                        .WithMany("Turnos")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK__Turnos__cliente___3F466844");

                    b.HasOne("Dominio.Entities.Recurso", "Recurso")
                        .WithMany("Turnos")
                        .HasForeignKey("RecursoId")
                        .IsRequired()
                        .HasConstraintName("FK__Turnos__recurso___403A8C7D");

                    b.Navigation("Cliente");

                    b.Navigation("Recurso");
                });

            modelBuilder.Entity("Dominio.Entities.Cliente", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Dominio.Entities.Recurso", b =>
                {
                    b.Navigation("Bloqueos");

                    b.Navigation("HorariosDisponibilidads");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Dominio.Entities.Turno", b =>
                {
                    b.Navigation("Pagos");
                });
#pragma warning restore 612, 618
        }
    }
}
